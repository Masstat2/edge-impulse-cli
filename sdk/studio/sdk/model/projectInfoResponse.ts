/**
 * Edge Impulse API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { DevelopmentKeys } from './developmentKeys';
import { Device } from './device';
import { Download } from './download';
import { GenericApiResponse } from './genericApiResponse';
import { LatencyDevice } from './latencyDevice';
import { Project } from './project';
import { ProjectDataSummary } from './projectDataSummary';
import { ProjectInfoResponseAllOf } from './projectInfoResponseAllOf';
import { ProjectInfoResponseAllOfAcquisitionSettings } from './projectInfoResponseAllOfAcquisitionSettings';
import { ProjectInfoResponseAllOfComputeTime } from './projectInfoResponseAllOfComputeTime';
import { ProjectInfoResponseAllOfDataSummaryPerCategory } from './projectInfoResponseAllOfDataSummaryPerCategory';
import { ProjectInfoResponseAllOfDeploySettings } from './projectInfoResponseAllOfDeploySettings';
import { ProjectInfoResponseAllOfExperiments } from './projectInfoResponseAllOfExperiments';
import { ProjectInfoResponseAllOfImpulse } from './projectInfoResponseAllOfImpulse';
<<<<<<< HEAD:sdk/studio/sdk/model/projectInfoResponse.ts
import { ProjectInfoResponseAllOfPerformance } from './projectInfoResponseAllOfPerformance';
import { ProjectInfoResponseAllOfShowGettingStartedWizard } from './projectInfoResponseAllOfShowGettingStartedWizard';
=======
import { ProjectInfoResponseAllOfLatencyDevices } from './projectInfoResponseAllOfLatencyDevices';
>>>>>>> parent of 840c0ea (Release v1.13.10):sdk/studio/model/projectInfoResponse.ts
import { ProjectInfoResponseAllOfUrls } from './projectInfoResponseAllOfUrls';
import { ProjectPublicDataReadme } from './projectPublicDataReadme';
import { User } from './user';

export class ProjectInfoResponse {
    /**
    * Whether the operation succeeded
    */
    'success': boolean;
    /**
    * Optional error description (set if \'success\' was false)
    */
    'error'?: string;
    'project': Project;
    'downloads': Array<Download>;
    'developmentKeys': DevelopmentKeys;
    'impulse': ProjectInfoResponseAllOfImpulse;
    'devices': Array<Device>;
    'dataSummary': ProjectDataSummary;
    'dataSummaryPerCategory': ProjectInfoResponseAllOfDataSummaryPerCategory;
    'computeTime': ProjectInfoResponseAllOfComputeTime;
    'acquisitionSettings': ProjectInfoResponseAllOfAcquisitionSettings;
    'collaborators': Array<User>;
    'deploySettings': ProjectInfoResponseAllOfDeploySettings;
    /**
    * Experiments that the project has access to. Enabling experiments can only be done through a JWT token.
    */
    'experiments': Array<ProjectInfoResponseAllOfExperiments>;
    'latencyDevices': Array<LatencyDevice>;
    'urls': ProjectInfoResponseAllOfUrls;
    'showCreateFirstImpulse': boolean;
<<<<<<< HEAD:sdk/studio/sdk/model/projectInfoResponse.ts
    'showGettingStartedWizard': ProjectInfoResponseAllOfShowGettingStartedWizard;
    'performance': ProjectInfoResponseAllOfPerformance;
    'readme'?: ProjectPublicDataReadme;
    /**
    * The IDs of users who should be notified when a Keras or retrain job is finished.
    */
    'trainJobNotificationUids': Array<number>;
    /**
    * The IDs of users who should be notified when a DSP job is finished.
    */
    'dspJobNotificationUids': Array<number>;
    /**
    * The IDs of users who should be notified when a model testing job is finished.
    */
    'modelTestingJobNotificationUids': Array<number>;
    /**
    * The IDs of users who should be notified when an auto segmentation job is finished.
    */
    'autoSegmenterJobNotificationUids': Array<number>;
    /**
    * The IDs of users who should be notified when an export job is finished.
    */
    'exportJobNotificationUids': Array<number>;
    'hasNewTrainingData': boolean;
    /**
    * Config file specifying how to process CSV files.
    */
    'csvImportConfig'?: object;
    'studioUrl': string;
    'inPretrainedModelFlow': boolean;
    'dspPageSize'?: number;
    /**
    * Whether to show the actual sensor data in acquisition charts (only applies when you have structured labels)
    */
    'showSensorDataInAcquisitionGraph': boolean;
=======
>>>>>>> parent of 840c0ea (Release v1.13.10):sdk/studio/model/projectInfoResponse.ts

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "success",
            "baseName": "success",
            "type": "boolean"
        },
        {
            "name": "error",
            "baseName": "error",
            "type": "string"
        },
        {
            "name": "project",
            "baseName": "project",
            "type": "Project"
        },
        {
            "name": "downloads",
            "baseName": "downloads",
            "type": "Array<Download>"
        },
        {
            "name": "developmentKeys",
            "baseName": "developmentKeys",
            "type": "DevelopmentKeys"
        },
        {
            "name": "impulse",
            "baseName": "impulse",
            "type": "ProjectInfoResponseAllOfImpulse"
        },
        {
            "name": "devices",
            "baseName": "devices",
            "type": "Array<Device>"
        },
        {
            "name": "dataSummary",
            "baseName": "dataSummary",
            "type": "ProjectDataSummary"
        },
        {
            "name": "dataSummaryPerCategory",
            "baseName": "dataSummaryPerCategory",
            "type": "ProjectInfoResponseAllOfDataSummaryPerCategory"
        },
        {
            "name": "computeTime",
            "baseName": "computeTime",
            "type": "ProjectInfoResponseAllOfComputeTime"
        },
        {
            "name": "acquisitionSettings",
            "baseName": "acquisitionSettings",
            "type": "ProjectInfoResponseAllOfAcquisitionSettings"
        },
        {
            "name": "collaborators",
            "baseName": "collaborators",
            "type": "Array<User>"
        },
        {
            "name": "deploySettings",
            "baseName": "deploySettings",
            "type": "ProjectInfoResponseAllOfDeploySettings"
        },
        {
            "name": "experiments",
            "baseName": "experiments",
            "type": "Array<ProjectInfoResponseAllOfExperiments>"
        },
        {
            "name": "latencyDevices",
            "baseName": "latencyDevices",
            "type": "Array<LatencyDevice>"
        },
        {
            "name": "urls",
            "baseName": "urls",
            "type": "ProjectInfoResponseAllOfUrls"
        },
        {
            "name": "showCreateFirstImpulse",
            "baseName": "showCreateFirstImpulse",
            "type": "boolean"
<<<<<<< HEAD:sdk/studio/sdk/model/projectInfoResponse.ts
        },
        {
            "name": "showGettingStartedWizard",
            "baseName": "showGettingStartedWizard",
            "type": "ProjectInfoResponseAllOfShowGettingStartedWizard"
        },
        {
            "name": "performance",
            "baseName": "performance",
            "type": "ProjectInfoResponseAllOfPerformance"
        },
        {
            "name": "readme",
            "baseName": "readme",
            "type": "ProjectPublicDataReadme"
        },
        {
            "name": "trainJobNotificationUids",
            "baseName": "trainJobNotificationUids",
            "type": "Array<number>"
        },
        {
            "name": "dspJobNotificationUids",
            "baseName": "dspJobNotificationUids",
            "type": "Array<number>"
        },
        {
            "name": "modelTestingJobNotificationUids",
            "baseName": "modelTestingJobNotificationUids",
            "type": "Array<number>"
        },
        {
            "name": "autoSegmenterJobNotificationUids",
            "baseName": "autoSegmenterJobNotificationUids",
            "type": "Array<number>"
        },
        {
            "name": "exportJobNotificationUids",
            "baseName": "exportJobNotificationUids",
            "type": "Array<number>"
        },
        {
            "name": "hasNewTrainingData",
            "baseName": "hasNewTrainingData",
            "type": "boolean"
        },
        {
            "name": "csvImportConfig",
            "baseName": "csvImportConfig",
            "type": "object"
        },
        {
            "name": "studioUrl",
            "baseName": "studioUrl",
            "type": "string"
        },
        {
            "name": "inPretrainedModelFlow",
            "baseName": "inPretrainedModelFlow",
            "type": "boolean"
        },
        {
            "name": "dspPageSize",
            "baseName": "dspPageSize",
            "type": "number"
        },
        {
            "name": "showSensorDataInAcquisitionGraph",
            "baseName": "showSensorDataInAcquisitionGraph",
            "type": "boolean"
=======
>>>>>>> parent of 840c0ea (Release v1.13.10):sdk/studio/model/projectInfoResponse.ts
        }    ];

    static getAttributeTypeMap() {
        return ProjectInfoResponse.attributeTypeMap;
    }
}

